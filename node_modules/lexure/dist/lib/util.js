"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.okToFinish = exports.okToStep = exports.someToFinish = exports.someToStep = exports.errToSome = exports.okToSome = exports.someToOk = void 0;
const option_1 = require("./option");
const result_1 = require("./result");
const loopAction_1 = require("./loopAction");
/**
 * Converts an Option to a Result.
 * - Some -> Ok
 * - None -> Err
 * @param x - The Option.
 * @param error - The error if None.
 * @returns A Result.
 */
function someToOk(x, error) {
    if (x.exists) {
        return result_1.ok(x.value);
    }
    return result_1.err(error);
}
exports.someToOk = someToOk;
/**
 * Converts a Result to an Option.
 * - Ok -> Some
 * - Err -> None
 * @param x - The Result.
 * @returns An Option.
 */
function okToSome(x) {
    if (x.success) {
        return option_1.some(x.value);
    }
    return option_1.none();
}
exports.okToSome = okToSome;
/**
 * Converts a Result to an Option.
 * - Ok -> None
 * - Err -> Some
 * @param x - The Result.
 * @returns An Option.
 */
function errToSome(x) {
    if (!x.success) {
        return option_1.some(x.error);
    }
    return option_1.none();
}
exports.errToSome = errToSome;
/**
 * Converts an Option to a LoopAction.
 * - Some -> Step
 * - None -> Fail
 * @param x - The Option.
 * @param error - The error if None.
 * @returns A LoopAction.
 */
function someToStep(x, error) {
    if (x.exists) {
        return loopAction_1.step(x.value);
    }
    return loopAction_1.fail(error);
}
exports.someToStep = someToStep;
/**
 * Converts an Option to a LoopAction.
 * - Some -> Finish
 * - None -> Fail
 * @param x - The Option.
 * @param error - The error if None.
 * @returns A LoopAction.
 */
function someToFinish(x, error) {
    if (x.exists) {
        return loopAction_1.finish(x.value);
    }
    return loopAction_1.fail(error);
}
exports.someToFinish = someToFinish;
/**
 * Converts a Result to a LoopAction.
 * - Ok -> Step
 * - Err -> Fail
 * @param x - The Result.
 * @returns A LoopAction.
 */
function okToStep(x) {
    if (x.success) {
        return loopAction_1.step(x.value);
    }
    return loopAction_1.fail(x.error);
}
exports.okToStep = okToStep;
/**
 * Converts a Result to a LoopAction.
 * - Ok -> Finish
 * - Err -> Fail
 * @param x - The Result.
 * @returns A LoopAction.
 */
function okToFinish(x) {
    if (x.success) {
        return loopAction_1.finish(x.value);
    }
    return loopAction_1.fail(x.error);
}
exports.okToFinish = okToFinish;
//# sourceMappingURL=util.js.map