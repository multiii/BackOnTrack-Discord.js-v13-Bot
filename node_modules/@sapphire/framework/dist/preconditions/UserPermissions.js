"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorePrecondition = void 0;
const discord_js_1 = require("discord.js");
require("../lib/errors/Identifiers");
const Precondition_1 = require("../lib/structures/Precondition");
const ClientPermissions_1 = require("./ClientPermissions");
class CorePrecondition extends Precondition_1.Precondition {
    constructor() {
        super(...arguments);
        this.dmChannelPermissions = new discord_js_1.Permissions(~new discord_js_1.Permissions([
            'ADD_REACTIONS',
            'ATTACH_FILES',
            'EMBED_LINKS',
            'READ_MESSAGE_HISTORY',
            'SEND_MESSAGES',
            'USE_EXTERNAL_EMOJIS',
            'VIEW_CHANNEL',
            'USE_EXTERNAL_STICKERS',
            'MENTION_EVERYONE'
        ]).bitfield & discord_js_1.Permissions.ALL).freeze();
    }
    run(message, _command, context) {
        const required = context.permissions ?? new discord_js_1.Permissions();
        const channel = message.channel;
        const permissions = message.guild ? channel.permissionsFor(message.author) : this.dmChannelPermissions;
        if (!permissions) {
            return this.error({
                identifier: "preconditionClientPermissionsNoPermissions" /* PreconditionClientPermissionsNoPermissions */,
                message: "I was unable to resolve the end-user's permissions in the command invocation channel."
            });
        }
        const missing = permissions.missing(required);
        return missing.length === 0
            ? this.ok()
            : this.error({
                identifier: "preconditionUserPermissions" /* PreconditionUserPermissions */,
                message: `You are missing the following permissions to run this command: ${missing
                    .map((perm) => ClientPermissions_1.CorePrecondition.readablePermissions[perm])
                    .join(', ')}`,
                context: { missing }
            });
    }
}
exports.CorePrecondition = CorePrecondition;
//# sourceMappingURL=UserPermissions.js.map