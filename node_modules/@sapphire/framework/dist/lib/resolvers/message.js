"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveMessage = void 0;
const discord_utilities_1 = require("@sapphire/discord-utilities");
const discord_js_utilities_1 = require("@sapphire/discord.js-utilities");
const pieces_1 = require("@sapphire/pieces");
const result_1 = require("@sapphire/result");
const discord_js_1 = require("discord.js");
require("../errors/Identifiers");
async function resolveMessage(parameter, options) {
    const channel = options.channel ?? options.message.channel;
    const message = (await resolveById(parameter, channel)) ??
        (await resolveByLink(parameter, options.message)) ??
        (await resolveByChannelAndMessage(parameter, options.message));
    if (message)
        return (0, result_1.ok)(message);
    return (0, result_1.err)("messageError" /* Identifiers.ArgumentMessageError */);
}
exports.resolveMessage = resolveMessage;
function resolveById(parameter, channel) {
    return discord_utilities_1.SnowflakeRegex.test(parameter) ? channel.messages.fetch(parameter) : null;
}
async function resolveByLink(parameter, message) {
    if (!message.guild)
        return null;
    const matches = discord_utilities_1.MessageLinkRegex.exec(parameter);
    if (!matches)
        return null;
    const [, guildId, channelId, messageId] = matches;
    const guild = pieces_1.container.client.guilds.cache.get(guildId);
    if (guild !== message.guild)
        return null;
    return getMessageFromChannel(channelId, messageId, message.author);
}
async function resolveByChannelAndMessage(parameter, message) {
    const result = discord_utilities_1.ChannelMessageRegex.exec(parameter)?.groups;
    if (!result)
        return null;
    return getMessageFromChannel(result.channelId, result.messageId, message.author);
}
async function getMessageFromChannel(channelId, messageId, originalAuthor) {
    const channel = pieces_1.container.client.channels.cache.get(channelId);
    if (!channel)
        return null;
    if (!((0, discord_js_utilities_1.isNewsChannel)(channel) || (0, discord_js_utilities_1.isTextChannel)(channel)))
        return null;
    if (!channel.viewable)
        return null;
    if (!channel.permissionsFor(originalAuthor)?.has(discord_js_1.Permissions.FLAGS.VIEW_CHANNEL))
        return null;
    return channel.messages.fetch(messageId);
}
//# sourceMappingURL=message.js.map