"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreListener = void 0;
const Result_1 = require("../../lib/parsers/Result");
const Listener_1 = require("../../lib/structures/Listener");
const Events_1 = require("../../lib/types/Events");
class CoreListener extends Listener_1.Listener {
    constructor(context) {
        super(context, { event: Events_1.Events.CommandAccepted });
    }
    async run(payload) {
        const { message, command, parameters, context } = payload;
        const args = await command.preParse(message, parameters, context);
        const result = await (0, Result_1.fromAsync)(async () => {
            message.client.emit(Events_1.Events.CommandRun, message, command, { ...payload, args });
            const result = await command.messageRun(message, args, context);
            message.client.emit(Events_1.Events.CommandSuccess, { ...payload, args, result });
        });
        if ((0, Result_1.isErr)(result)) {
            message.client.emit(Events_1.Events.CommandError, result.error, { ...payload, args, piece: command });
        }
        message.client.emit(Events_1.Events.CommandFinish, message, command, { ...payload, args });
    }
}
exports.CoreListener = CoreListener;
//# sourceMappingURL=CoreCommandAccepted.js.map