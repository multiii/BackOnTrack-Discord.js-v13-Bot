"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreListener = void 0;
const result_1 = require("@sapphire/result");
const stopwatch_1 = require("@sapphire/stopwatch");
const Listener_1 = require("../../../lib/structures/Listener");
const Events_1 = require("../../../lib/types/Events");
class CoreListener extends Listener_1.Listener {
    constructor(context) {
        super(context, { event: Events_1.Events.ChatInputCommandAccepted });
    }
    async run(payload) {
        const { command, context, interaction } = payload;
        const result = await (0, result_1.fromAsync)(async () => {
            this.container.client.emit(Events_1.Events.ChatInputCommandRun, interaction, command, { ...payload });
            const stopwatch = new stopwatch_1.Stopwatch();
            const result = await command.chatInputRun(interaction, context);
            const { duration } = stopwatch.stop();
            this.container.client.emit(Events_1.Events.ChatInputCommandSuccess, { ...payload, result, duration });
            return duration;
        });
        if ((0, result_1.isErr)(result)) {
            this.container.client.emit(Events_1.Events.ChatInputCommandError, result.error, { ...payload, duration: result.value ?? -1 });
        }
        this.container.client.emit(Events_1.Events.ChatInputCommandFinish, interaction, command, { ...payload, duration: result.value ?? -1 });
    }
}
exports.CoreListener = CoreListener;
//# sourceMappingURL=CoreChatInputCommandAccepted.js.map