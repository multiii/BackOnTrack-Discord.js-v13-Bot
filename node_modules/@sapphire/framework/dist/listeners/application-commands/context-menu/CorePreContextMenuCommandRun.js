"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreListener = void 0;
const Listener_1 = require("../../../lib/structures/Listener");
const Events_1 = require("../../../lib/types/Events");
class CoreListener extends Listener_1.Listener {
    constructor(context) {
        super(context, { event: Events_1.Events.PreContextMenuCommandRun });
    }
    async run(payload) {
        const { command, interaction } = payload;
        // Run global preconditions:
        const globalResult = await this.container.stores.get('preconditions').contextMenuRun(interaction, command, payload);
        if (!globalResult.success) {
            this.container.client.emit(Events_1.Events.ContextMenuCommandDenied, globalResult.error, payload);
            return;
        }
        // Run command-specific preconditions:
        const localResult = await command.preconditions.contextMenuRun(interaction, command, payload);
        if (!localResult.success) {
            this.container.client.emit(Events_1.Events.ContextMenuCommandDenied, localResult.error, payload);
            return;
        }
        this.container.client.emit(Events_1.Events.ContextMenuCommandAccepted, payload);
    }
}
exports.CoreListener = CoreListener;
//# sourceMappingURL=CorePreContextMenuCommandRun.js.map