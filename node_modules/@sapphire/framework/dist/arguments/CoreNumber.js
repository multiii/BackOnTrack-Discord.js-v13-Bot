"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreArgument = void 0;
require("../lib/errors/Identifiers");
const resolvers_1 = require("../lib/resolvers");
const Argument_1 = require("../lib/structures/Argument");
class CoreArgument extends Argument_1.Argument {
    constructor(context) {
        super(context, { name: 'number' });
        this.messages = {
            ["numberTooSmall" /* ArgumentNumberTooSmall */]: ({ minimum }) => `The given number must be greater than ${minimum}.`,
            ["numberTooLarge" /* ArgumentNumberTooLarge */]: ({ maximum }) => `The given number must be less than ${maximum}.`,
            ["numberError" /* ArgumentNumberError */]: () => 'The argument did not resolve to a valid number.'
        };
    }
    run(parameter, context) {
        const resolved = (0, resolvers_1.resolveNumber)(parameter, { minimum: context.minimum, maximum: context.maximum });
        if (resolved.success)
            return this.ok(resolved.value);
        return this.error({
            parameter,
            identifier: resolved.error,
            message: this.messages[resolved.error](context),
            context
        });
    }
}
exports.CoreArgument = CoreArgument;
//# sourceMappingURL=CoreNumber.js.map