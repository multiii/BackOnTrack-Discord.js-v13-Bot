"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreArgument = void 0;
require("../lib/errors/Identifiers");
const resolvers_1 = require("../lib/resolvers");
const Argument_1 = require("../lib/structures/Argument");
class CoreArgument extends Argument_1.Argument {
    constructor(context) {
        super(context, { name: 'role' });
    }
    async run(parameter, context) {
        const { guild } = context.message;
        if (!guild) {
            return this.error({
                parameter,
                identifier: "roleMissingGuild" /* ArgumentRoleMissingGuild */,
                message: 'This command can only be used in a server.',
                context
            });
        }
        const resolved = await (0, resolvers_1.resolveRole)(parameter, guild);
        if (resolved.success)
            return this.ok(resolved.value);
        return this.error({
            parameter,
            identifier: resolved.error,
            message: 'The given argument did not resolve to a role.',
            context: { ...context, guild }
        });
    }
}
exports.CoreArgument = CoreArgument;
//# sourceMappingURL=CoreRole.js.map