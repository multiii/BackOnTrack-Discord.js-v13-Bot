"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ApplicationCommandLimits: () => ApplicationCommandLimits,
  ApplicationCommandOptionLimits: () => ApplicationCommandOptionLimits,
  AutoCompleteLimits: () => AutoCompleteLimits,
  ButtonLimits: () => ButtonLimits,
  ChannelLimits: () => ChannelLimits,
  ChannelMentionRegex: () => ChannelMentionRegex,
  ChannelMessageRegex: () => ChannelMessageRegex,
  DiscordHostnameRegex: () => DiscordHostnameRegex,
  DiscordInviteLinkRegex: () => DiscordInviteLinkRegex,
  EmbedLimits: () => EmbedLimits,
  EmojiLimits: () => EmojiLimits,
  EmojiRegex: () => EmojiRegex,
  FormattedCustomEmoji: () => FormattedCustomEmoji,
  FormattedCustomEmojiWithGroups: () => FormattedCustomEmojiWithGroups,
  GuildLimits: () => GuildLimits,
  GuildMemberLimits: () => GuildMemberLimits,
  HttpUrlRegex: () => HttpUrlRegex,
  InteractionLimits: () => InteractionLimits,
  MessageLimits: () => MessageLimits,
  MessageLinkRegex: () => MessageLinkRegex,
  ModalLimits: () => ModalLimits,
  ModerationLimits: () => ModerationLimits,
  ParsedCustomEmoji: () => ParsedCustomEmoji,
  ParsedCustomEmojiWithGroups: () => ParsedCustomEmojiWithGroups,
  RoleLimits: () => RoleLimits,
  RoleMentionRegex: () => RoleMentionRegex,
  SelectMenuLimits: () => SelectMenuLimits,
  SnowflakeRegex: () => SnowflakeRegex,
  TextInputLimits: () => TextInputLimits,
  TokenRegex: () => TokenRegex,
  TwemojiRegex: () => TwemojiRegex,
  UserLimits: () => UserLimits,
  UserOrMemberMentionRegex: () => UserOrMemberMentionRegex,
  WebSocketUrlRegex: () => WebSocketUrlRegex,
  WebhookRegex: () => WebhookRegex
});
module.exports = __toCommonJS(src_exports);

// src/lib/regexes.ts
var import_regex = __toESM(require("twemoji-parser/dist/lib/regex.js"));
var ChannelMentionRegex = /^<#(?<id>\d{17,19})>$/;
var ChannelMessageRegex = /^(?<channelId>\d{17,19})-(?<messageId>\d{17,19})$/;
var DiscordHostnameRegex = /(?<subdomain>\w+)\.?(?<hostname>dis(?:cord)?(?:app|merch|status)?)\.(?<tld>com|g(?:d|g|ift)|(?:de(?:sign|v))|media|new|store|net)/i;
var DiscordInviteLinkRegex = /^(?:https?:\/\/)?(?:www\.)?(?:discord\.gg\/|discord(?:app)?\.com\/invite\/)?(?<code>[\w\d-]{2,})$/i;
var EmojiRegex = /^(?:<(?<animated>a)?:(?<name>\w{2,32}):)?(?<id>\d{17,21})>?$/;
var FormattedCustomEmoji = /<a?:\w{2,32}:\d{17,18}>/;
var FormattedCustomEmojiWithGroups = /(?<animated>a?):(?<name>[^:]+):(?<id>\d{17,19})/;
var HttpUrlRegex = /^https?:\/\//;
var MessageLinkRegex = /^(?:https:\/\/)?(?:ptb\.|canary\.)?discord(?:app)?\.com\/channels\/(?<guildId>(?:\d{17,19}|@me))\/(?<channelId>\d{17,19})\/(?<messageId>\d{17,19})$/;
var ParsedCustomEmoji = /a?:\w{2,32}:\d{17,18}/;
var ParsedCustomEmojiWithGroups = /(?<animated>a?):(?<name>[^:]+):(?<id>\d{17,19})/;
var RoleMentionRegex = /^<@&(?<id>\d{17,19})>$/;
var SnowflakeRegex = /^(?<id>\d{17,19})$/;
var TokenRegex = /(?<mfaToken>mfa\.[a-z0-9_-]{20,})|(?<basicToken>[a-z0-9_-]{23,28}\.[a-z0-9_-]{6,7}\.[a-z0-9_-]{27})/i;
var TwemojiRegex = import_regex.default;
var UserOrMemberMentionRegex = /^<@!?(?<id>\d{17,19})>$/;
var WebSocketUrlRegex = /^wss?:\/\//;
var WebhookRegex = /(?<url>^https:\/\/(?:(?:canary|ptb).)?discord(?:app)?.com\/api(?:\/v\d+)?\/webhooks\/(?<id>\d+)\/(?<token>[\w-]+)\/?$)/;

// src/lib/limits.ts
var ChannelLimits = {
  MaximumDescriptionLength: 1024,
  MaximumNameLength: 100,
  MaximumViewersPerScreenShare: 50
};
var EmbedLimits = {
  MaximumAuthorNameLength: 256,
  MaximumDescriptionLength: 4096,
  MaximumFieldNameLength: 256,
  MaximumFields: 25,
  MaximumFieldValueLength: 1024,
  MaximumFooterLength: 2048,
  MaximumTitleLength: 256,
  MaximumTotalCharacters: 6e3
};
var EmojiLimits = {
  MaximumEmojiNameLength: 32
};
var GuildLimits = {
  MaximumChannels: 500,
  MaximumRoles: 250
};
var GuildMemberLimits = {
  MaximumDisplayNameLength: 32
};
var InteractionLimits = {
  MaximumButtonsPerActionRow: 5,
  MaximumSelectMenusPerActionRow: 1,
  MaximumTextInputsPerActionRow: 1,
  MaximumOptionsInSelectMenus: 25
};
var ApplicationCommandLimits = {
  MaximumNameCharacters: 32,
  MaximumDescriptionCharacters: 100,
  MaximumOptionsLength: 25
};
var ApplicationCommandOptionLimits = {
  MaximumNameCharacters: 32,
  MaximumDescriptionCharacters: 100,
  MaximumChoicesLength: 25
};
var ButtonLimits = {
  MaximumLabelCharacters: 80,
  MaximumCustomIdCharacters: 100
};
var SelectMenuLimits = {
  MaximumCustomIdCharacters: 100,
  MaximumOptionsLength: 25,
  MaximumPlaceholderCharacters: 100,
  MaximumMinValuesSize: 25,
  MaximumMaxValuesSize: 25,
  MaximumLengthOfNameOfOption: 100
};
var MessageLimits = {
  MaximumEmbeds: 10,
  MaximumActionRows: 5,
  MaximumLength: 2e3,
  MaximumNitroLength: 4e3,
  MaximumReactions: 20,
  MaximumUploadSize: 8e6,
  MaximumNitroUploadSize: 1e8,
  MaximumUploadSizeInGuild: [8e6, 8e6, 5e7, 1e8]
};
var ModerationLimits = {
  MaximumTimeoutDuration: 2419200
};
var RoleLimits = {
  MaximumNameLength: 100
};
var UserLimits = {
  MaximumUsersPerDMGroup: 10,
  MaximumBiographyLength: 190
};
var AutoCompleteLimits = {
  MaximumAmountOfOptions: 20,
  MaximumLengthOfNameOfOption: 100
};
var ModalLimits = {
  MaximumCustomIdCharacters: 100,
  MaximumTitleCharacters: 45,
  MaximumComponents: 5
};
var TextInputLimits = {
  MaximumCustomIdCharacters: 100,
  MaximumLabelCharacters: 45,
  MaximumPlaceholderCharacters: 100,
  MaximumValueCharacters: 4e3
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ApplicationCommandLimits,
  ApplicationCommandOptionLimits,
  AutoCompleteLimits,
  ButtonLimits,
  ChannelLimits,
  ChannelMentionRegex,
  ChannelMessageRegex,
  DiscordHostnameRegex,
  DiscordInviteLinkRegex,
  EmbedLimits,
  EmojiLimits,
  EmojiRegex,
  FormattedCustomEmoji,
  FormattedCustomEmojiWithGroups,
  GuildLimits,
  GuildMemberLimits,
  HttpUrlRegex,
  InteractionLimits,
  MessageLimits,
  MessageLinkRegex,
  ModalLimits,
  ModerationLimits,
  ParsedCustomEmoji,
  ParsedCustomEmojiWithGroups,
  RoleLimits,
  RoleMentionRegex,
  SelectMenuLimits,
  SnowflakeRegex,
  TextInputLimits,
  TokenRegex,
  TwemojiRegex,
  UserLimits,
  UserOrMemberMentionRegex,
  WebSocketUrlRegex,
  WebhookRegex
});
//# sourceMappingURL=index.js.map